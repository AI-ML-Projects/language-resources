# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Parser adding . as a time separator.

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

# The default time separator is '.'
separators = "." | ":";

hours =
  universal_func.InvertMarkup[universal_rules.time_hours]
  universal_rules.one_space
  universal_rules.HOURS
;

# "jam" are a bit like "o'clock" in English.
hours_oclock =
  ((universal_rules.lower_case @ "jam") : "")
  universal_rules.one_space
  hours
;

hours_only =
  hours_oclock
  universal_rules.one_space
  universal_rules.MARKUP_MINUTES
  ("" : "0")
;

hours_minutes =
  (hours_oclock | hours)
  universal_rules.one_space
  universal_rules.MARKUP_MINUTES
  (separators : "") universal_rules.del_space_star universal_rules.TIME00_59
  (universal_rules.one_space
  universal_rules.MARKUP_SECONDS
  (separators : "") universal_rules.del_space_star universal_rules.TIME00_59)?
;

default = Optimize[
  (hours_minutes | hours_only)
  universal_rules.MARKUP_STYLE1
];

export TIME_MARKUP = Optimize[
  universal_func.InvertMarkup[universal_rules.time]
  universal_rules.one_space
  universal_func.InvertMarkup[universal_rules.opening_brace]
  default
  universal_func.InvertMarkup[universal_rules.closing_brace]
];
