# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Javanese parser for letter sequences.

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

caps = universal_rules.kUpper+;
digits = universal_rules.kDigit;
delete_dots = CDRewrite["." : "", "", "", universal_rules.sigma_star];
ins_dots = (universal_rules.kAlpha ("" : "."))+;

# Various things that we force into being letter sequences so they don't
# get converted back into words when they exist in the lex.
force_lseq =
    ("CE" | "ONG" | "URL" | "EU" | "SOS" | "OS" | "SDP" |
    "AMC" | "PhD" | "OM" | "ING" | "KRA")
  @ ins_dots
;

force_lseq_caseless =
    delete_dots
    @ universal_rules.upper_case
    @ ("URL" | "IPV" | "IMDB" | "EG" | "SMS" | "CD" | "TV" | "APK" | "SVP"
       | "USB" | "FTP" | "ADSL" | "VDSL" | "GSM" | "ADN" | "CEO" | "GHB" | "VS")
    @ ins_dots
;

lseq = Optimize[
 (
  ((force_lseq | force_lseq_caseless) <-1>) |
  (caps (digits | caps)+) |
  (caps (("&" | "-" | "/" | digits)? caps)+)
 )
 @ universal_rules.LSEQ_MARKUP
];

export LSEQ_MARKUP = Optimize[
    universal_rules.LETTER_NUM_SEQ | universal_rules.LSEQ_FULLSTOPS | lseq
];
