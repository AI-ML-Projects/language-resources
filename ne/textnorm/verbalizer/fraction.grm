# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Verbalizer for fractions.
# Can verbalize vulgar fractions specified by a numerator and denominator
# and also mixed fractions such as "2 3/5".

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;
import 'cardinal.grm' as c;

# Supporting all fractions.
all_numerator =
  universal_rules.numerator
  c.CARDINAL
  ("" : "का मुनि ")
  universal_rules.rec_sep
  universal_rules.denominator
  c.CARDINAL
  universal_rules.rec_sep
;

# Supporting fraction: 1/2.
one_half =
  universal_rules.numerator
  ("1" : "")
  universal_rules.rec_sep
  universal_rules.denominator
  ("2" : "आधा" <-1.0>)
  universal_rules.rec_sep
;

# Supporting fractions: 1/3, 2/3.
three_denominator =
  universal_rules.numerator
  (("1" | "2") @ c.CARDINAL)
  universal_rules.rec_sep
  universal_rules.denominator
  universal_rules.ins_space
  ("3" : "तिहाइ")
  universal_rules.rec_sep
;

# Supporting fractions: 1/4, 2/4, 3/4.
four_denominator =
  universal_rules.numerator
  (("1" | "2" | "3") @ c.CARDINAL)
  universal_rules.rec_sep
  universal_rules.denominator
  universal_rules.ins_space
  ("4" : "चौथाइ")
  universal_rules.rec_sep
;

# Integer part in mixed fractions.
integer_fraction =
  universal_rules.integer_part
  c.CARDINAL
  universal_rules.ins_space
  universal_rules.rec_sep
  all_numerator
;

export FRACTION = Optimize[
  (integer_fraction | all_numerator |
   ((one_half | three_denominator | four_denominator) <-1.0>))
];

export FRACTION_MARKUP = Optimize[
  universal_rules.semclass_fraction
  FRACTION
];
