# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;
import 'cardinal.grm' as c;
import 'decimal.grm' as d;
import 'fraction.grm' as f;

english_units = StringFile[
    'measure_units_en.tsv'];

english_prefixes = StringFile[
    'measure_prefixes_en.tsv'];

nepali_units = StringFile[
    'measure_units_ne.tsv'];

nepali_prefixes = StringFile[
    'measure_prefixes_ne.tsv'];

prefixes = english_prefixes | nepali_prefixes;
units = english_units | nepali_units;

combined_units = (prefixes (" " : "")?)? units;

powers = ("square" : "वर्ग") | ("cubic" : "घन");
per = ("per" : " प्रति ");

power_group = (powers universal_rules.del_space_star universal_rules.ins_space)? combined_units;

# Example: kilometer per hour, miles per hour, cubic meters.
rest_group = Optimize[
  (combined_units universal_rules.del_space_star per universal_rules.del_space_star)? combined_units |
  (power_group universal_rules.del_space_star per universal_rules.del_space_star)? combined_units
];

ne_units = power_group | rest_group | combined_units;

number = c.CARDINAL | d.DECIMAL | f.FRACTION;

measure = Optimize[
  (
    number
    universal_rules.units
    universal_rules.ins_space
    ne_units
    universal_rules.rec_sep
  )
];

export MEASURE_MARKUP = Optimize[
  (
    universal_rules.semclass_measure
    measure
  )
];
