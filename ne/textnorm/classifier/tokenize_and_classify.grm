# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Simple classifier for Nepali.
import 'classify.grm' as classify;
import 'devanagari.grm' as deva;
import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;


# Legal letters in a Nepali word may contain Latin or Devanagari letters.
# This is the definition of a legally spelt word.
legal_word = universal_rules.kAlpha+ | deva.WORD;

# Nepali writing uses Devanagari numerals.
convert_deva_digits_to_arabic =
  CDRewrite[deva.DEVANAGARI_NUMERALS_MAPPING, "", "", universal_rules.sigma_star];

nepali_punct_token = Optimize[
  universal_rules.PUNCT_TOKEN |
  universal_func.PunctToken["ред", universal_rules.token_pause_length_long
               universal_rules.del_space_plus universal_rules.token_phrase_break_true]
];

export TOKENIZE_AND_CLASSIFY = Optimize[
  convert_deva_digits_to_arabic @
  universal_func.TokenizeAndClassifySimpler[classify.CLASSIFY,
                               universal_func.WordTokenSimple[legal_word],
                               nepali_punct_token,
                               universal_rules.FALLBACK_TOKEN,
                               universal_rules.SPACE,
                               universal_rules.kAlpha,
                               universal_rules.kDigit] @
  universal_rules.CLEAN_SPACES
];
