# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Nepali money classifier.
import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;


quantities =
    ("m" : "1000000") |
    ("bn" : "1000000000")
;

quantity = universal_func.APPLY_QUANTITY_MARKUP[quantities];

currency_names =
    (("डलर" | "अमेरिकी डलर") : "usd") |
    (("पाउन्ड" | "स्टर्लिङ पाउन्ड" | "पाउन्ड स्टर्लिङ") : "gbp") |
    ("युरो" : "eur") |
    (("रु." | "रु" | "रुपैयाँ" | "नेपाली रुपैयाँ") : "npr")
;

currency_symbol_markup = Optimize[
  universal_func.InvertMarkup[universal_rules.money_currency]
  universal_rules.ins_space
  universal_rules.ins_quote
  (universal_rules.NORM_CURRENCY_SYMBOLS | (universal_rules.lower_case_anything @ currency_names))
  universal_rules.ins_quote
  universal_rules.ins_space
];

amount =  universal_rules.AMOUNT_MARKUP @ universal_rules.REMOVE_ZEROES;

# In Nepali currency name always comes before the amount.
style1 = (
    currency_symbol_markup amount quantity?
   )
   universal_func.InvertMarkup[universal_rules.style1]
;

style3 = (
     (universal_rules.ISO4217_CODE_MARKUP quantity? amount) |
     (quantity? amount universal_rules.ISO4217_CODE_MARKUP)
   )
   universal_func.InvertMarkup[universal_rules.style3]
;

export MONEY = Optimize[(style1 | style3) universal_rules.ins_space];

export MONEY_MARKUP = universal_func.APPLY_MONEY_MARKUP[MONEY];
