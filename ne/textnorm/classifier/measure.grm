# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Parser for measurements.
# Basically, combine universal measure markup with
# support for Nepali units.

import 'devanagari.grm' as ne;
import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

nepali_units = StringFile[
    'measure_units_ne.txt'];
nepali_abbv_units = StringFile[
    'measure_units_abbv.txt'];
nepali_prefixes = StringFile[
    'measure_prefixes_ne.txt'];

number = universal_rules.INTEGER_DECIMAL_MARKUP | universal_rules.FRACTION_MARKUP;

# Degree symbol and celcius degree.
degree_symbol = ("°" : "डिग्री") | ("°से" : "डिग्री सेल्सियस");

remove_dot_and_space =
  (ne.WORD ((universal_rules.clear_space? "."? universal_rules.clear_space?) : ""));

all_abbv_units = Optimize[
  universal_rules.SI_UNITS |
  universal_rules.ENGLISH_UNITS |
  universal_rules.MISC_UNITS |
  universal_rules.POWER_UNITS |
  (remove_dot_and_space @ nepali_abbv_units)+
];

all_units = Optimize[
  degree_symbol |
  all_abbv_units |
  Project[all_abbv_units, 'output'] |
  ((nepali_prefixes " "?)? nepali_units)
];

slash = " "? "/" " "?;
pers = ("प्रति" | slash | "per" | " per ") : "प्रति";

over_measure = universal_func.UnitsPerUnitsMarkup[number, all_units, pers, all_units];

export MEASURE_MARKUP = Optimize[
  (
    universal_func.MeasureMarkup[number, all_units]
  | universal_rules.TWENTYFOUR_H
  | universal_rules.UNITS_DMS
  | universal_rules.UNITS_HMS
  | universal_rules.UNITS_FEET_INCHES
  | universal_func.UnitsInches[number]
  | over_measure
  ) @ universal_rules.CLEAN_SPACES
];
