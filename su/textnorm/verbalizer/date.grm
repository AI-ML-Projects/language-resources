# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Sundanese verbalizer for date
################################################################################

import 'date_classifier.grm' as date;
import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;
import 'cardinal.grm' as c;

# Sundanese way of reading date is roughly characterized by the following
# rules:
# Days of the month are always spoken as cardinal numbers
# Months are spoken by name rather than number
# Year is spoken as a cardinal.

export VERBALIZE_DAY = ((("0" : "")? universal_rules.kDigit) | (universal_rules.d1to9 universal_rules.kDigit))
  @ c.CARDINAL;
verbalize_month_by_number =
  (("0" : "")?  universal_rules.any_month) @ date.MONTH_FULL_NAMES;

verbalize_era = date.ERA_NAME;

day = universal_rules.day VERBALIZE_DAY universal_rules.rec_sep;
month_number = universal_rules.month verbalize_month_by_number universal_rules.rec_sep;
year = universal_rules.year c.CARDINAL universal_rules.rec_sep;
era = universal_rules.era verbalize_era universal_rules.rec_sep;

number_date = Optimize[
  (day universal_rules.ins_space)?
  (month_number universal_rules.ins_space)?
  year?
  (universal_rules.ins_space era)?
  universal_rules.any_style?
];

export DATE_MARKUP = Optimize[
  universal_rules.semclass_date
  number_date<5>
];
