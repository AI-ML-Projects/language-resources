# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Telephone parser for Telephone
import 'bangla.grm' as b;
import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

bn_ext = Optimize[
  universal_rules.pass_anything
    (("এক্সটেনশান" | "এক্স.") : "extension")?
  universal_rules.pass_anything
];

# Mobile numbers in India and Bangladesh start with 0/7/8/9 as of 2014.
# Many times a mobile number is written as a continuous number of 10 digits
# without any grouping.

start_no = "0" | "7" | "8" | "9" ;
digit = universal_rules.kDigit;
exceptions = (
             "0"{9} |
             "1"{9} |
             "2"{9} |
             "3"{9} |
             "4"{9} |
             "5"{9} |
             "6"{9} |
             "7"{9} |
             "8"{9} |
             "9"{9}
);

ten_digits = universal_rules.del_space_star start_no (digit{9} - exceptions)
             universal_rules.del_space_star;

bn_recognizer = (Optimize[Project[universal_rules.RECOGNIZER, 'input']] - ("999" | "911"))
                  @ universal_rules.RECOGNIZER;

phone_number = Optimize[ (bn_recognizer | ten_digits) @ universal_rules.PARSER ];

bare_phone_number_markup =
  universal_func.InvertMarkup[universal_rules.telephone]
  universal_rules.ins_space
  universal_func.InvertMarkup[universal_rules.opening_brace]
  universal_rules.ins_space
  phone_number
  universal_func.InvertMarkup[universal_rules.closing_brace]
;

# We classify strings of digits which would not otherwise get classified as
# telephone numbers if they are followed by the phrase "এ কল করা হচ্ছে"
# ("calling").
phone_number_markup_with_context =
  universal_func.PhoneNumberMarkup[universal_rules.PARSER]
  universal_rules.token_delimiter_clear_space_star
  ("এ কল করা হচ্ছে" @ universal_rules.word_tokens)
;

export PHONE_NUMBER_MARKUP = Optimize[
  (b.BANGLA_NUMERALS_REWRITE) @ bn_ext @
  (bare_phone_number_markup | phone_number_markup_with_context)
];
