# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Bangla writing system (which is an abugida).

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

# This is generated from the complete set of Bengali code points from the BMP.
basic_bangla =
    "ঁ"
  | "ং"
  | "ঃ"
  | "অ"
  | "আ"
  | "ই"
  | "ঈ"
  | "উ"
  | "ঊ"
  | "ঋ"
  | "ঌ"
  | "এ"
  | "ঐ"
  | "ও"
  | "ঔ"
  | "ক"
  | "খ"
  | "গ"
  | "ঘ"
  | "ঙ"
  | "চ"
  | "ছ"
  | "জ"
  | "ঝ"
  | "ঞ"
  | "ট"
  | "ঠ"
  | "ড"
  | "ঢ"
  | "ণ"
  | "ত"
  | "থ"
  | "দ"
  | "ধ"
  | "ন"
  | "প"
  | "ফ"
  | "ব"
  | "ভ"
  | "ম"
  | "য"
  | "র"
  | "ল"
  | "শ"
  | "ষ"
  | "স"
  | "হ"
  | "়"
  | "ঽ"
  | "া"
  | "ি"
  | "ী"
  | "ু"
  | "ূ"
  | "ৃ"
  | "ৄ"
  | "ে"
  | "ৈ"
  | "ো"
  | "ৌ"
  | "্"
  | "ৎ"
  | "ৗ"
  | "ড়"
  | "ঢ়"
  | "য়"
  | "ৠ"
  | "ৡ"
  | "ৢ"
  | "ৣ"
  | "০"
  | "১"
  | "২"
  | "৩"
  | "৪"
  | "৫"
  | "৬"
  | "৭"
  | "৮"
  | "৯"
  | "ৰ"
  | "ৱ"
  | "৲"
  | "৳"
  | "৴"
  | "৵"
  | "৶"
  | "৷"
  | "৸"
  | "৹"
  | "৺"
  | "৻"
;

export BANGLA_ALPHA = Optimize[basic_bangla];

bangla_numerals_mapping = Optimize[
   ("০" : "0")
 | ("১" : "1")
 | ("২" : "2")
 | ("৩" : "3")
 | ("৪" : "4")
 | ("৫" : "5")
 | ("৬" : "6")
 | ("৭" : "7")
 | ("৮" : "8")
 | ("৯" : "9")
];

export BANGLA_NUMERALS_REWRITE = CDRewrite[
  bangla_numerals_mapping, "", "", universal_rules.sigma_star
];
export WORD = Optimize[basic_bangla+];

# Dependent vowels
export VD =
    "[224][166][190]"
  | "[224][166][191]"
  | "[224][167][128]"
  | "[224][167][129]"
  | "[224][167][130]"
  | "[224][167][131]"
  | "[224][167][132]"
  | "[224][167][135]"
  | "[224][167][136]"
  | "[224][167][139]"
  | "[224][167][140]"
  | "[224][167][162]"
  | "[224][167][163]"
;

# NOTE(rws)
# Gets rid of [junk]. We could have done this with a single rule mapping
# directly to epsilon above, but I want to keep it this way for now so we have
# an easy way in principle to track what's getting transduced to junk.
export DELETE_JUNK =
  CDRewrite["[junk]" : "", "", "", (universal_rules.kBytes | "[junk]")*]
;
