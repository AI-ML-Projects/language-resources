# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#Verbalizer for dates

import 'number_names_rules.grm' as n;
import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

months = (
( "1" : "জানুয়ারি" ) |
( "2" : "ফেব্রুয়ারি" ) |
( "3" : "মার্চ" ) |
( "4" : "এপ্রিল" ) |
( "5" : "মে" ) |
( "6" : "জুন" ) |
( "7" : "জুলাই" ) |
( "8" : "অগাস্ট" ) |
( "9" : "সেপ্টেম্বর" ) |
( "10" : "অক্টোবর" ) |
( "11" : "নভেম্বর" ) |
( "12" : "ডিসেম্বর" )
);

export MONTHS_POSSESSIVE = (
  (("3" | "4" | "6" | "9" | "10" | "11" | "12") @ months ("" : "ের")) |
  (("1" | "2" | "5") @ months ("" : "র")) |
  ("7" : "জুলাইয়ের") |
  ("8" : "আগস্টের")
);

weekdays = (
("1" : "সোমবার") |
("2" : "মঙ্গলবার") |
("3" : "বুধবার") |
("4" : "বৃহস্পতিবার") |
("5" : "শুক্রবার") |
("6" : "শনিবার") |
("7" : "রবিবার")
);

eras = (
("BC" : ("খ্রিস্টপূর্ব" | "খ্রিস্টপূর্ব")) |
("AD" : "খ্রীষ্টাব্দ")
);

export DAYS_TH =
  ("1" : "পয়লা") |
  ("2" : "দোসরা") |
  ("3" : "তেসরা") |
  ("4" : "চৌঠা") |
  ("6" : "ছয়ই") |
  ("9" : "নয়ই") |
  ("14" : "চোদ্দই") |
  ("18" : "আঠেরোই") |
  ("19" : "উনিশে") |
  (("5" | "7" | "8" | "10" | "11" | "12" | "13" | "15" | "16" | "17")
    @ (n.CARDINAL_NUMBER_NAME ("" : "ই"))) |
  (("20" | "21" | "22" | "23" | "24" | "25" | "26" | "27" | "28" | "29" | "30"
    | "31") @ (n.CARDINAL_NUMBER_NAME ("" : "ে")))
;

d = universal_rules.kDigit;
# gthraxlinter: disable=lower-case-local-fsts
D = d - "0";

# This has to be modified from Hindi because we don't factorize the numbers in
# C++ here.

# Years are readable as hundreds, as in Hindi.

# Trailing digits.

y2 =
   (("0" : "") D)
 | (D d)
;

year =
    (D{2} @ n.CARDINAL_NUMBER_NAME)
    ("" : " শো")
    ( ("00" : "")
    | (("" : " ") (y2 @ n.CARDINAL_NUMBER_NAME))
    )
;

years = Optimize[
          (((D "0" d d) @ n.CARDINAL_NUMBER_NAME)<-2>) |
          year
];

weekday = universal_rules.weekday
          weekdays
          universal_rules.rec_sep
          universal_rules.ins_space;

era = universal_rules.era
      eras
      universal_rules.rec_sep;

# If it's ddmm, the translation should be "dayth month"
# where the "dayth" is a special form of day, but not the ordinal number.
style1 = Optimize[
   (universal_rules.day DAYS_TH universal_rules.rec_sep universal_rules.ins_space)?
   universal_rules.month months universal_rules.rec_sep
   (universal_rules.year universal_rules.ins_space years universal_rules.rec_sep)?
   universal_rules.style1?
];

# If it's mmdd, the translation should be "month's day"
# where the "month's" is the possessive form of month.
style2 = Optimize[
   universal_rules.month MONTHS_POSSESSIVE universal_rules.ins_space universal_rules.rec_sep
   universal_rules.day n.CARDINAL_NUMBER_NAME universal_rules.rec_sep
   (universal_rules.year universal_rules.ins_space years universal_rules.rec_sep)?
   universal_rules.style2
];

export YEAR_ONLY = (
  universal_rules.year universal_rules.ins_space years universal_rules.rec_sep
);

FULL_DATE_WITHOUT_MDY1 = (style1 | style2);

export DATE_MARKUP = Optimize[
  universal_rules.semclass_date
  weekday?
  (FULL_DATE_WITHOUT_MDY1 | YEAR_ONLY)
  (universal_rules.ins_space era)?
];
