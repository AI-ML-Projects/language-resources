# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Burmese verbalizer for phone numbers.

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;
import 'digit.grm' as digit ;

one_or_more_digits =  (digit.DIGIT universal_rules.ins_space)* digit.DIGIT;
one_or_two_digits = (digit.DIGIT universal_rules.ins_space)? digit.DIGIT;
three_digits = (digit.DIGIT universal_rules.ins_space){2} digit.DIGIT;

country_code =
  universal_rules.country_code
  ("" : "အပေါင်း ")
  one_or_more_digits
  universal_rules.rec_sep
;

# Simple rule for breaking up long sequences of digits.
# Group digits by three (backwards) if possible;
# E.g., 01 555 602
#       09 420 038 187
three_or_more_digits = (one_or_two_digits universal_rules.ins_sil)?
                       (three_digits universal_rules.ins_sil)*
                       three_digits;
phone_digit_breakdown = one_or_two_digits | three_or_more_digits;

number_part =
  universal_rules.number_part
  phone_digit_breakdown
  universal_rules.rec_sep
  universal_rules.clear_space_star
;

number_parts = (number_part universal_rules.ins_sil)* number_part;

extension =
  universal_rules.extension
  one_or_more_digits
  universal_rules.rec_sep
;

phone_number = Optimize[
  (country_code universal_rules.ins_sil)?
  number_parts
  extension?
  universal_rules.clear_space_star
];

export PHONE_NUMBER_MARKUP = Optimize[
  universal_rules.semclass_telephone
  phone_number
];
