# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Burmese Verbalizer for letter sequences; read character by character

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

burmese_mappings = Optimize[
("က" : "က") |
("ခ" : "ခ") |
("ဂ" : "ဂ") |
("ဃ" : "ဃ") |
("င" : "င") |
("စ" : "စ") |
("ဆ" : "ဆ") |
("ဇ" : "ဇ") |
("ဈ" : "ဈ") |
("ဉ" : "ဉ") |
("ည" : "ည") |
("ဋ" : "ဋ") |
("ဌ" : "ဌ") |
("ဍ" : "ဍ") |
("ဎ" : "ဎ") |
("ဏ" : "ဏ") |
("တ" : "တ") |
("ထ" : "ထ") |
("ဒ" : "ဒ") |
("ဓ" : "ဓ") |
("န" : "န") |
("ပ" : "ပ") |
("ဖ" : "ဖ") |
("ဗ" : "ဗ") |
("ဘ" : "ဘ") |
("မ" : "မ") |
("ယ" : "ယ") |
("ရ" : "ရ") |
("လ" : "လ") |
("ဝ" : "ဝ") |
("သ" : "သ") |
("ဟ" : "ဟ") |
("ဠ" : "ဠ") |
("အ" : "အ")
];

latin_mappings = Optimize[
    (("a" | "A") : "a_letter-en") |
    (("b" | "B") : "b_letter-en") |
    (("c" | "C") : "c_letter-en") |
    (("d" | "D") : "d_letter-en") |
    (("e" | "E") : "e_letter-en") |
    (("f" | "F") : "f_letter-en") |
    (("g" | "G") : "g_letter-en") |
    (("h" | "H") : "h_letter-en") |
    (("i" | "I") : "i_letter-en") |
    (("j" | "J") : "j_letter-en") |
    (("k" | "K") : "k_letter-en") |
    (("l" | "L") : "l_letter-en") |
    (("m" | "M") : "m_letter-en") |
    (("n" | "N") : "n_letter-en") |
    (("o" | "O") : "o_letter-en") |
    (("p" | "P") : "p_letter-en") |
    (("q" | "Q") : "q_letter-en") |
    (("r" | "R") : "r_letter-en") |
    (("s" | "S") : "s_letter-en") |
    (("t" | "T") : "t_letter-en") |
    (("u" | "U") : "u_letter-en") |
    (("v" | "V") : "v_letter-en") |
    (("w" | "W") : "w_letter-en") |
    (("x" | "X") : "x_letter-en") |
    (("y" | "Y") : "y_letter-en") |
    (("z" | "Z") : "z_letter-en")
];

export MAPPINGS = Optimize[burmese_mappings | latin_mappings];

export MAPPINGS_STAR = Optimize[(MAPPINGS universal_rules.ins_space)*];

# remove any dots from the sequence.
mapping_dot = MAPPINGS_STAR (("." | "'" | "၊" | "။") : "")?;

export LSEQ_MARKUP = Optimize[
  universal_rules.semclass_letters
  universal_rules.letters
  ((mapping_dot universal_rules.ins_space)* @ universal_rules.CLEAN_SPACES)
  universal_rules.rec_sep
];
