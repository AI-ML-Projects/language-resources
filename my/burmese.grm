# my/burmese.grm
# -*- Thrax -*-
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Copyright 2015, 2016 Google Inc. All Rights Reserved.
# Author: mjansche@google.com (Martin Jansche)

g = SymbolTable['my/grapheme.syms'];
p = SymbolTable['my/phoneme.syms'];
p2t = StringFile['my/phoneme2tts.tsv', p, 'byte'];

export UTF8_TO_GRAPHEME = Optimize[
 ("(":"(".g)|(")":")".g)|("*":"*".g)|
 ("က":"ka".g)|("ခ":"kha".g)|("ဂ":"ga".g)|("ဃ":"gha".g)|("င":"nga".g)|
 ("စ":"ca".g)|("ဆ":"cha".g)|("ဇ":"ja".g)|("ဈ":"jha".g)|("ဉ":"nya".g)|
 ("ည":"nnya".g)|
 ("ဋ":"tta".g)|("ဌ":"ttha".g)|("ဍ":"dda".g)|("ဎ":"ddha".g)|("ဏ":"nna".g)|
 ("တ":"ta".g)|("ထ":"tha".g)|("ဒ":"da".g)|("ဓ":"dha".g)|("န":"na".g)|
 ("ပ":"pa".g)|("ဖ":"pha".g)|("ဗ":"ba".g)|("ဘ":"bha".g)|("မ":"ma".g)|
 ("ယ":"ya".g)|("ရ":"ra".g)|("လ":"la".g)|("ဝ":"wa".g)|("သ":"sa".g)|
 ("ဟ":"ha".g)|("ဠ":"lla".g)|
 ("အ":"a".g)|
 ("ဣ":"i".g)|("ဤ":"ii".g)|("ဥ":"u".g)|("ဦ":"uu".g)|("ဧ":"e".g)|
 ("ဩ":"o".g)|("ဪ":"au".g)|
 ("ါ":"-AA".g)|("ာ":"-aa".g)|
 ("ိ":"-i".g)|("ီ":"-ii".g)|("ု":"-u".g)|("ူ":"-uu".g)|("ေ":"-e".g)|("ဲ":"-ai".g)|
 ("ံ":"anusvara".g)|("့":"dot".g)|("း":"visarga".g)|("္":"virama".g)|("်":"asat".g)|
 ("ျ":"-y".g)|("ြ":"-r".g)|("ွ":"-w".g)|("ှ":"-h".g)|
 ("ဿ":"great_sa".g)|
 ("၀":"0".g)|("၁":"1".g)|("၂":"2".g)|("၃":"3".g)|("၄":"4".g)|
 ("၅":"5".g)|("၆":"6".g)|("၇":"7".g)|("၈":"8".g)|("၉":"9".g)|
 ("၊":"little_section".g)|("။":"section".g)|
 ("၌":"locative".g)|("၍":"completed".g)|("၎":"aforementioned".g)|
 ("၏":"genitive".g)|
 ("ၐ":"sha".g)|("ၑ":"ssa".g)|
 ("ၒ":"ri".g)|("ၓ":"rri".g)|("ၔ":"li".g)|("ၕ":"lli".g)|
 ("ၖ":"-ri".g)|("ၗ":"-rri".g)|("ၘ":"-li".g)|("ၙ":"-lli".g)
];

gstar = Optimize[Project[UTF8_TO_GRAPHEME, 'output']*];

# Watkins's "Subset 2 vowels" (short series) with implied checked/killed tone:
utf8_to_short_vowel =
  ("ɪ"  : "ɪ".p)
| ("ʊ"  : "ʊ".p)
| ("eɪ̯" : "eɪ̯".p)
| ("oʊ̯" : "oʊ̯".p)
| ("ɛ"  : "ɛ".p)
| ("aɪ̯" : "aɪ̯".p)
| ("aʊ̯" : "aʊ̯".p)
| ("a"  : "a".p)
;

short_vowel = Optimize[Project[utf8_to_short_vowel, 'output']];

export UTF8_TO_PHONEME = Optimize[
 ("k":"k".p)|("kʰ":"kʰ".p)|("g":"g".p)|("ŋ":"ŋ".p)|("ŋ̊":"ŋ̊".p)|
 ("tɕ":"tɕ".p)|("tɕʰ":"tɕʰ".p)|("dʑ":"dʑ".p)|
 ("s":"s".p)|("sʰ":"sʰ".p)|("z":"z".p)|("ɲ":"ɲ".p)|("ɲ̥":"ɲ̥".p)|
 ("t":"t".p)|("tʰ":"tʰ".p)|("d":"d".p)|("n":"n".p)|("n̥":"n̥".p)|
 ("p":"p".p)|("pʰ":"pʰ".p)|("b":"b".p)|("m":"m".p)|("m̥":"m̥".p)|
 ("j":"j".p)|
 ("ɹ":"ɹ".p)|("ʃ":"ʃ".p)|
 ("l":"l".p)|("l̥":"l̥".p)|
 ("w":"w".p)|("w̥":"w̥".p)|
 ("θ":"θ".p)|("ð":"ð".p)|
 ("h":"h".p)|("ʔ":"ʔ".p)|
 # Reduced syllable nucleus, short, without tone:
 ("ə":"ə".p)|
 # Watkins's "Subset 1 vowels" (minus /ə/) in 3 tones:
 ("ì":"ì".p)|("í":"í".p)|("ḭ":"ḭ".p)|
 ("ù":"ù".p)|("ú":"ú".p)|("ṵ":"ṵ".p)|
 ("è":"è".p)|("é":"é".p)|("ḛ":"ḛ".p)|
 ("ò":"ò".p)|("ó":"ó".p)|("o̰":"o̰".p)|
 ("ɛ̀":"ɛ̀".p)|("ɛ́":"ɛ́".p)|("ɛ̰":"ɛ̰".p)|
 ("ɔ̀":"ɔ̀".p)|("ɔ́":"ɔ́".p)|("ɔ̰":"ɔ̰".p)|
 ("à":"à".p)|("á":"á".p)|("a̰":"a̰".p)|
 # Watkins's "Subset 2 vowels" (nasalized series) in 3 tones:
 ("ɪ̀ɴ":"ɪ̀ɴ".p)|("ɪ́ɴ":"ɪ́ɴ".p)|("ɪ̰ɴ":"ɪ̰ɴ".p)|
 ("ʊ̀ɴ":"ʊ̀ɴ".p)|("ʊ́ɴ":"ʊ́ɴ".p)|("ʊ̰ɴ":"ʊ̰ɴ".p)|
 ("èɪ̯ɴ":"èɪ̯ɴ".p)|("éɪ̯ɴ":"éɪ̯ɴ".p)|("ḛɪ̯ɴ":"ḛɪ̯ɴ".p)|
 ("òʊ̯ɴ":"òʊ̯ɴ".p)|("óʊ̯ɴ":"óʊ̯ɴ".p)|("o̰ʊ̯ɴ":"o̰ʊ̯ɴ".p)|
 ("àɪ̯ɴ":"àɪ̯ɴ".p)|("áɪ̯ɴ":"áɪ̯ɴ".p)|("a̰ɪ̯ɴ":"a̰ɪ̯ɴ".p)|
 ("àʊ̯ɴ":"àʊ̯ɴ".p)|("áʊ̯ɴ":"áʊ̯ɴ".p)|("a̰ʊ̯ɴ":"a̰ʊ̯ɴ".p)|
 ("àɴ":"àɴ".p)|("áɴ":"áɴ".p)|("a̰ɴ":"a̰ɴ".p)|
 utf8_to_short_vowel
];

phoneme = Optimize[Project[UTF8_TO_PHONEME, 'output']];

pstar = Optimize[(phoneme | ".".p)*];

#
# Orthographic (grapheme-to-grapheme) preprocessing rules
#

respell_exceptions_aux =
# Exceptional spelling (and variants) of ယောက်ျား:
  ("ka asat -y -aa".g : "ka asat ka -y -aa".g)
| ("ka -y asat -aa".g : "ka asat ka -y -aa".g)
| ("ka -y -aa asat".g : "ka asat ka -y -aa".g)
# Exceptional spelling (and variants) of ကျွန်ုပ်:
| ("na asat -u".g : "na asat na -u".g)
| ("na -u asat".g : "na asat na -u".g)
# Variant spelling of ၎င်း:
| ("nga asat virama aforementioned".g     # င်္၎
  : "aforementioned nga asat visarga".g)
;

respell_exceptions = CDRewrite[respell_exceptions_aux, "".g, "".g, gstar];

# This will unstack kinzi ("nga asat virama".g) in particular.
unstack_1 = CDRewrite["asat virama".g : "asat".g, "".g, "".g, gstar];

unstack_2_aux =
  ("virama".g : "asat".g)          # Unstack stacked consonants
| ("great_sa".g : "sa asat sa".g)  # Unstack great_sa
;

unstack_2 = CDRewrite[unstack_2_aux, "".g, "".g, gstar];

# Reordering of medials: put -h before all other medials.
# This assumes that medials are coming in in standard (yrwh) order.
# TODO: If needed, put all of the medials in the right order.
reorder_medials_aux = ("".g : "-h".g) "-y".g? "-r".g? "-w".g? ("-h".g : "".g);

reorder_medials = CDRewrite[reorder_medials_aux, "".g, "".g, gstar];

fix_bad_spelling_aux =
  ("o -e -aa asat".g : "a -e -aa asat".g)  # Wrong spelling of ဪ
;

fix_bad_spelling = CDRewrite[fix_bad_spelling_aux, "".g, "".g, gstar];

replace_vowels_aux =
  ("-AA".g  : "-aa".g)            # Replace tall -AA with regular -aa
| ("i".g    : "a -i".g)           # Replace ဣ with အိ
| ("ii".g   : "a -ii".g)          # Replace ဤ with အီ
| ("u".g    : "a -u".g)           # Replace ဥ with အု
| ("uu".g   : "a -uu".g)          # Replace ဦ with အူ
| ("e".g    : "a -e".g)           # Replace ဧ with အေ
| ("o".g    : "a -e -aa".g)       # Replace ဩ with အော
| ("au".g   : "a -e -aa asat".g)  # Replace ဪ with အော်
;

replace_vowels = CDRewrite[replace_vowels_aux, "".g, "".g, gstar];

orthographic_preprocessing = Optimize[
  respell_exceptions
@ unstack_1
@ unstack_2
@ reorder_medials
@ fix_bad_spelling
@ replace_vowels
];

#
# Pronunciation (grapheme-to-phoneme) rules
#

g2p_initial =
# Velars
  ("ka".g       : "k".p)
| ("kha".g      : "kʰ".p)
| ("ga".g       : "g".p)
| ("gha".g      : "g".p)
| ("nga".g      : "ŋ".p)
| ("nga -h".g   : "ŋ̊".p)
| ("nga -h -r".g: "ɲ̥".p <-1>)
| ("nga -r".g   : "ɲ".p <-1>)
# Historic palatal stops ==> alveolar fricatives
| ("ca".g       : "s".p)
| ("cha".g      : "sʰ".p)
| ("ja".g       : "z".p)
| ("jha".g      : "z".p)
| ("nya".g      : "ɲ".p)
| ("nnya".g     : "ɲ".p)
| ("nya -h".g   : "ɲ̥".p)
| ("nnya -h".g  : "ɲ̥".p)
# Alveolars
| ("tta".g      : "t".p)
| ("ttha".g     : "tʰ".p)
| ("dda".g      : "d".p)
| ("ddha".g     : "d".p)
| ("nna".g      : "n".p)
| ("nna -h".g   : "n̥".p)
# Historic dentals ==> alveolars
| ("ta".g       : "t".p)
| ("tha".g      : "tʰ".p)
| ("da".g       : "d".p)
| ("dha".g      : "d".p)
| ("na".g       : "n".p)
| ("na -h".g    : "n̥".p)
# Labials
| ("pa".g       : "p".p)
| ("pha".g      : "pʰ".p)
| ("ba".g       : "b".p)
| ("bha".g      : "b".p)
| ("ma".g       : "m".p)
| ("ma -h".g    : "m̥".p)
# Other letters
| ("ya".g       : "j".p)
| ("ya -h".g    : "ʃ".p)
| ("ra".g       : "ɹ".p)
| ("ra -h".g    : "ʃ".p)
| ("la".g       : "l".p)
| ("la -h".g    : "l̥".p)
| ("la -h -y".g : "ʃ".p)
| ("wa".g       : "w".p)
| ("wa -h".g    : "w̥".p)
| ("sa".g       : "θ".p)  # historic /s/ ==> modern dentals /θ, ð/
| ("sa -h -y".g : "ʃ".p)
| ("ha".g       : "h".p)
| ("lla".g      : "l".p)
| ("lla -h".g   : "l̥".p)
| ("a".g        : "ʔ".p)
;

# The weights of <1> make the medial costlier (and hence less preferred) than
# consuming -y as part of an onset (e.g. လှျ) or consuming -w as part of a
# nucleus (e.g. ကွန်).
g2p_medial =
  ("-y".g : "j".p <1>)
| ("-r".g : "j".p)
| ("-w".g : "w".p <1>)
;

g2p_nucleus =
  ("".g : "ə".p)  # default vowel
  # "ga asat" occurs e.g. in မဂ္ဂဇင်း ~ မဂ်ဂဇင်း /mɛʔ.gə.zɪ́ɴ/
| (("ka".g | "ga".g) "asat".g : "ɛ ʔ".p)
| ("-aa".g? ("nga".g | "nya".g) "dot asat".g : "ɪ̰ɴ".p)
| ("-aa".g? ("nga".g | "nya".g) "asat visarga".g : "ɪ́ɴ".p)
| ("-aa".g? ("nga".g | "nya".g) "asat".g : "ɪ̀ɴ".p)
| ("-aa".g? "ca asat".g : "ɪ ʔ".p)  # maybe sometimes /eɪ̯ʔ/
| ("-aa".g? "ya".g "dot asat".g     : "ɛ̰".p)
| ("-aa".g? "ya".g "asat visarga".g : "ɛ́".p)
| ("-aa".g? "ya".g "asat".g         : "ɛ̀".p)
  # Vowel quality can vary for final nnya. Defaulting to /i/ here:
| ("-e".g? "nnya".g "dot asat".g     : "ḭ".p)
| ("-e".g? "nnya".g "asat visarga".g : "í".p)
| ("-e".g? "nnya".g "asat".g         : "ì".p)
| ("-aa".g? ("nna".g | "na".g | "ma".g) "dot asat".g : "a̰ɴ".p)
| ("-aa".g? ("nna".g | "na".g | "ma".g) "asat visarga".g : "áɴ".p)
| ("-aa".g? ("nna".g | "na".g | "ma".g) "asat".g : "àɴ".p)
| ("-aa".g? ("tta".g | "ttha".g | "ta".g | "tha".g | "da".g | "pa".g | "ba".g | "bha".g | "wa".g | "sa".g) "asat".g : "a ʔ".p)
| ("-aa dot".g : "a̰".p)
| ("-aa visarga".g : "á".p)
| ("-aa".g : "à".p)
| ("-i".g ("ka".g | "ga".g | "ca".g | "tta".g | "ta".g | "da".g | "pa".g | "sa".g) "asat".g : "eɪ̯ ʔ".p)
| ("-i".g (("nga".g | "nna".g | "na".g | "ma".g) "dot asat".g | "anusvara dot".g) : "ḛɪ̯ɴ".p)
| ("-i".g (("nga".g | "nna".g | "na".g | "ma".g) "asat visarga".g | "anusvara visarga".g) : "éɪ̯ɴ".p)
| ("-i".g (("nga".g | "nna".g | "na".g | "ma".g) "asat".g | "anusvara".g) : "èɪ̯ɴ".p)
| ("-i -u".g ("ka".g | "tta".g | "ta".g) "asat".g : "aɪ̯ ʔ".p)
| ("-i -u".g ("nga".g | "nna".g) "dot asat".g : "a̰ɪ̯ɴ".p)
| ("-i -u".g ("nga".g | "nna".g) "asat visarga".g : "áɪ̯ɴ".p)
| ("-i -u".g ("nga".g | "nna".g) "asat".g : "àɪ̯ɴ".p)
| ("-i -u".g ("dot".g | "ya dot asat".g | "wa dot asat".g) : "o̰".p)
| ("-i -u".g ("visarga".g | "ya asat visarga".g | "wa asat visarga".g) : "ó".p)
| ("-i -u".g ("ya asat".g | "wa asat".g)? : "ò".p)
| ("-i -uu visarga".g : "ó".p)  # TODO: probably a misspelling; if not, expand to the other tones
##| ("-i -uu".g ("nga".g | "nna".g) "asat".g : "àɪ̯ɴ".p)  # due to typo
| ("-i dot".g : "ḭ".p)  # redundant creaky tone
| ("-i visarga".g : "í".p)
| ("-i".g : "ḭ".p)
| ("-ii dot".g : "ḭ".p)
| ("-ii visarga".g : "í".p)
| ("-ii".g : "ì".p)
| ("-u".g ("ka".g | "ga".g | "ca".g | "tta".g | "ta".g | "da".g | "pa".g | "sa".g) "asat".g : "oʊ̯ ʔ".p)
| ("-u".g (("nya".g | "nna".g | "na".g | "ma".g) "dot asat".g | "anusvara dot".g) : "o̰ʊ̯ɴ".p)
| ("-u".g (("nya".g | "nna".g | "na".g | "ma".g) "asat visarga".g | "anusvara visarga".g) : "óʊ̯ɴ".p)
| ("-u".g (("nya".g | "nna".g | "na".g | "ma".g) "asat".g | "anusvara".g) : "òʊ̯ɴ".p)
| ("-u dot".g : "ṵ".p)
| ("-u visarga".g : "ú".p)
| ("-u".g : "ṵ".p)
| ("-uu dot".g : "ṵ".p)
| ("-uu visarga".g : "ú".p)
| ("-uu".g : "ù".p)
| ("-e".g ("ta".g | "sa".g) "asat".g : "ɪ ʔ".p)
| ("-e -aa ka asat".g : "aʊ̯ ʔ".p)
| ("-e -aa".g ("nna".g | "nga".g) "dot asat".g : "a̰ʊ̯ɴ".p)
| ("-e -aa".g ("nna".g | "nga".g) "asat visarga".g : "áʊ̯ɴ".p)
| ("-e -aa".g ("nna".g | "nga".g) "asat".g : "àʊ̯ɴ".p)
| ("-e -aa dot asat".g : "ɔ̰".p)
| ("-e -aa dot".g : "ɔ̰".p)
| ("-e -aa asat".g : "ɔ̀".p)
| ("-e -aa".g : "ɔ́".p)
| ("-e dot".g : "ḛ".p)
| ("-e visarga".g : "é".p)
| ("-e".g : "è".p)
| ("-ai dot".g : "ɛ̰".p)
| ("-ai".g : "ɛ́".p)
| ("anusvara dot".g : "a̰ɴ".p)
| ("anusvara visarga".g : "áɴ".p)
| ("anusvara".g : "àɴ".p)
| ("-w".g ("tta".g | "ta".g) "asat".g : "ʊ ʔ".p)
| ("-w".g ("na".g | "nna".g) "dot asat".g : "ʊ̰ɴ".p)
| ("-w anusvara dot".g : "ʊ̰ɴ".p)
| ("-w".g ("na".g | "nna".g) "asat visarga".g : "ʊ́ɴ".p)
| ("-w anusvara visarga".g: "ʊ́ɴ".p)
| ("-w".g ("na".g | "nna".g) "asat".g : "ʊ̀ɴ".p)
| ("-w anusvara".g : "ʊ̀ɴ".p)
;

g2p_coda_consonant =
(
  ( ("ka".g     : "k".p)
  | ("kha".g    : "kʰ".p)
  | ("kha -y".g : "tɕʰ".p)
  | ("ga".g     : "g".p)
  | ("ca".g     : "s".p)
  | ("ja".g     : "z".p)
  | ("ta".g     : "t".p)
  | ("tha".g    : "tʰ".p)
  | ("da".g     : "d".p)
  | ("na".g     : "n".p)
  | ("pa".g     : "p".p)
  | ("pha".g    : "pʰ".p)
  | ("ba".g     : "b".p)
  | ("bha".g    : "b".p)
  | ("ma".g     : "m".p)  # e.g. in ခရင်မ် "cream"
  | ("ra".g     : "ɹ".p)  # silent in native words
  | ("ra -h".g  : "ʃ".p)
  | ("la".g     : "l".p)  # silent in native words
  | ("ha".g     : "h".p)  # always silent?
  | ("lla".g    : "l".p)
  )
  ("asat".g : "".p <1>)
) | (
  ( ("kha".g : "tɕʰ".p)
  )
  ("asat -y".g : "".p <1>)
);

g2p_coda =
  ("(".g : "".p) g2p_coda_consonant+ (")".g : "".p)
|                g2p_coda_consonant*
;

g2p_regular = g2p_initial g2p_medial* g2p_nucleus g2p_coda;

g2p_other =
  ("locative".g : "n̥ aɪ̯ ʔ".p)                              # ၌
| ("completed".g : "j w ḛ".p)                              # ၍ as if ရွေ့
| ("aforementioned nga asat visarga".g : "l ə . g áʊ̯ɴ".p)  # ၎င်း
| ("aforementioned".g : "l ə . g áʊ̯ɴ".p <1>)               # ၎ (Unicode <5.1)
| ("genitive".g : "ʔ ḭ".p)                                 # ၏
;

g2p_exceptions =
(
# Effect of initial wa ဝ (not medial -w) on the nucleus:
  ("wa".g "-aa".g? ("tta".g | "ta".g) "asat".g : "w ʊ ʔ".p)
| ("wa".g ("na".g | "nna".g) "dot asat".g : "w ʊ̰ɴ".p)
| ("wa".g ("na".g | "nna".g) "asat visarga".g : "w ʊ́ɴ".p)
| ("wa".g ("na".g | "nna".g) "asat".g : "w ʊ̀ɴ".p)
# Override pronunciation for combinations:
| ("la nnya asat visarga".g     : "l ɛ́".p)
| ("cha nnya asat".g            : "sʰ ɛ̀".p)
| ("tha nnya asat".g            : "tʰ ɛ̀".p)
| ("tha nnya dot asat".g        : "tʰ ɛ̰".p)
| ("tha nnya asat visarga".g    : "tʰ ɛ́".p)
| ("pa nnya asat".g             : "p ɛ̀".p)
| ("pa nnya dot asat".g         : "p j ḭ".p)
| ("pa nnya asat visarga".g     : "p j í".p)
| ("pa -r nnya dot asat".g      : "p j ḛ".p)
| ("pha nnya asat".g            : "pʰ ɛ̀".p)
| ("pha nnya dot asat".g        : "pʰ ɛ̰".p)
| ("pha nnya asat visarga".g    : "pʰ ɛ́".p)
| ("pha -r nnya asat".g         : "pʰ j è".p)
| ("pha -r nnya dot asat".g     : "pʰ j ḛ".p)
| ("pha -r nnya asat visarga".g : "pʰ j é".p)
| ("ba nnya asat visarga".g     : "b j í".p)
| ("ma nnya asat".g             : "m j ì".p)
| ("ma nnya dot asat".g         : "m j ḭ".p)
| ("ma nnya asat visarga".g     : "m ɛ́".p)
| ("ma -h nnya dot asat".g      : "m̥ ɛ̰".p)
| ("ra -h nnya asat".g          : "ʃ è".p)
| ("ra -h nnya dot asat".g      : "ʃ ḛ".p)
| ("la nnya asat".g             : "l ɛ̀".p)
| ("la nnya dot asat".g         : "l ɛ̰".p)
| ("la -h nnya asat".g          : "l̥ ɛ̀".p)
| ("la -h nnya dot asat".g      : "l̥ ɛ̰".p)
| ("la -h nnya asat visarga".g  : "l̥ ɛ́".p)
| ("ka -w ma asat visarga".g    : "k ʊ́ɴ".p)
| ("cha -w ma asat visarga".g   : "sʰ ʊ́ɴ".p)
)
("".g : "".p)
;

g2p_syllable =
  (g2p_regular <1>)
| (g2p_other <1>)
| (g2p_exceptions)  # needs to be cheaper than the preceding disjuncts
;

syllable_boundary = "".g : ".".p;

g2p_core = g2p_syllable (syllable_boundary g2p_syllable)*;

#
# Phonological (phoneme-to-phoneme) rules
#

rm_redundant_j = CDRewrite["j".p : "".p, "j".p, "".p, pstar];

rm_redundant_w = CDRewrite["w".p : "".p, "w".p, "".p, pstar];

# Derive the modern palatal affricates as allophones of the velars.
palatalize_aux =
  ("k j".p  : "tɕ".p)
| ("kʰ j".p : "tɕʰ".p)
| ("g j".p  : "dʑ".p)
;

palatalize = CDRewrite[palatalize_aux, "".p, "".p, pstar];

simplify_coda_cluster = CDRewrite["ʔ".p : "".p, short_vowel, phoneme, pstar];

full_final_vowel = CDRewrite["ə".p : "a̰".p, "", "[EOS]", pstar];

phonological_postprocessing = Optimize[
  rm_redundant_j
@ rm_redundant_w
@ palatalize
@ simplify_coda_cluster
@ full_final_vowel
];

g2p_with_r = Optimize[
  orthographic_preprocessing
@ g2p_core
@ phonological_postprocessing
];

r_to_j = CDRewrite["ɹ".p : "j".p, "".p, "".p, pstar];

export G2P = Optimize[g2p_with_r @ r_to_j];

export B2P = Optimize[UTF8_TO_GRAPHEME* @ g2p_with_r @ r_to_j];

export B2P_TTS = Optimize[B2P @ ((p2t ("" : " "))* p2t)];

#
# Phonemic respelling (phoneme-to-grapheme) rules
#

p2g_initial =
# Velars
  ("k".p   : "ka".g)
| ("kʰ".p  : "kha".g)
| ("g".p   : "ga".g)
| ("ŋ".p   : "nga".g)
| ("ŋ̊".p   : "nga -h".g)
# Palatal affricates
| ("tɕ".p  : "ka -y".g)
| ("tɕʰ".p : "kha -y".g)
| ("dʑ".p  : "ga -y".g)
# Alveolar fricatives
| ("s".p   : "ca".g)
| ("sʰ".p  : "cha".g)
| ("z".p   : "ja".g)
# Palatal nasals
| ("ɲ".p   : "nya".g)
| ("ɲ̥".p   : "nya -h".g)
# Alveolar stops and nasals
| ("t".p   : "ta".g)
| ("tʰ".p  : "tha".g)
| ("d".p   : "da".g)
| ("n".p   : "na".g)
| ("n̥".p   : "na -h".g)
# Labials
| ("p".p   : "pa".g)
| ("pʰ".p  : "pha".g)
| ("b".p   : "ba".g)
| ("m".p   : "ma".g)
| ("m̥".p   : "ma -h".g)
# Glides, laterals, other fricatives
| ("j".p   : "ya".g)
| ("ɹ".p   : "ra".g)
| ("ʃ".p   : "ra -h".g)
| ("l".p   : "la".g)
| ("l̥".p   : "la -h".g)
# NB: /w/ is handled spcially:
| ("w̥".p   : "wa -h".g)
| ("θ".p   : "sa".g)
| ("ð".p   : "sa -h".g)  # is there a better diacritic to mark this?
| ("h".p   : "ha".g)
| ("ʔ".p   : "a".g)
;

p2g_reduced_nucleus = "ə".p : "".g;

p2g_full_nucleus =
  ("ḭ".p   : "-i".g)
| ("ì".p   : "-ii".g)
| ("í".p   : "-ii visarga".g)
| ("ṵ".p   : "-u".g)
| ("ù".p   : "-uu".g)
| ("ú".p   : "-uu visarga".g)
| ("ḛ".p   : "-e dot".g)
| ("è".p   : "-e".g)
| ("é".p   : "-e visarga".g)
| ("o̰".p   : "-i -u dot".g)
| ("ó".p   : "-i -u visarga".g)
| ("ò".p   : "-i -u".g)
| ("ɛ̰".p   : "-ai dot".g)
| ("ɛ̀".p   : "ya asat".g)
| ("ɛ́".p   : "-ai".g)
| ("ɔ̰".p   : "-e -aa dot".g)
| ("ɔ̀".p   : "-e -aa asat".g)
| ("ɔ́".p   : "-e -aa".g)
| ("a̰".p   : "-aa dot".g)
| ("à".p   : "-aa".g)
| ("á".p   : "-aa visarga".g)
| ("ɪ̰ɴ".p  : "nga dot asat".g)
| ("ɪ̀ɴ".p  : "nga asat".g)
| ("ɪ́ɴ".p  : "nga asat visarga".g)
| ("ḛɪ̯ɴ".p : "-i na dot asat".g)
| ("èɪ̯ɴ".p : "-i na asat".g)
| ("éɪ̯ɴ".p : "-i na asat visarga".g)
| ("o̰ʊ̯ɴ".p : "-u na dot asat".g)
| ("òʊ̯ɴ".p : "-u na asat".g)
| ("óʊ̯ɴ".p : "-u na asat visarga".g)
| ("a̰ɪ̯ɴ".p : "-i -u nga dot asat".g)
| ("àɪ̯ɴ".p : "-i -u nga asat".g)
| ("áɪ̯ɴ".p : "-i -u nga asat visarga".g)
| ("a̰ʊ̯ɴ".p : "-e -aa nga dot asat".g)
| ("àʊ̯ɴ".p : "-e -aa nga asat".g)
| ("áʊ̯ɴ".p : "-e -aa nga asat visarga".g)
;

# Must be preceded by (initial or medial) /w/.
p2g_full_nucleus_after_w =
  p2g_full_nucleus
| ("a̰ɴ".p  : "ma dot asat".g)
| ("àɴ".p  : "ma asat".g)
| ("áɴ".p  : "ma asat visarga".g)
;

# Must be preceded by initial /w/.
p2g_full_nucleus_after_initial_w =
  p2g_full_nucleus_after_w
| ("ʊ̰ɴ".p : "na dot asat".g)
| ("ʊ̀ɴ".p : "na asat".g)
| ("ʊ́ɴ".p : "na asat visarga".g)
;

# Must not be preceded by /w/.
p2g_full_nucleus_not_after_w =
  p2g_full_nucleus
| ("a̰ɴ".p  : "na dot asat".g)
| ("àɴ".p  : "na asat".g)
| ("áɴ".p  : "na asat visarga".g)
| ("ʊ̰ɴ".p  : "-w na dot asat".g)
| ("ʊ̀ɴ".p  : "-w na asat".g)
| ("ʊ́ɴ".p  : "-w na asat visarga".g)
;

p2g_checked_nucleus =
  ("ɪ".p   : "ca asat".g)
| ("ʊ".p   : "-w ta asat".g)
| ("eɪ̯".p  : "-i ta asat".g)
| ("oʊ̯".p  : "-u ta asat".g)
| ("ɛ".p   : "ka asat".g)
| ("aɪ̯".p  : "-i -u ka asat".g)
| ("aʊ̯".p  : "-e -aa ka asat".g)
;

# Must be preceded by (initial or medial) /w/.
p2g_checked_nucleus_after_w =
  p2g_checked_nucleus
| ("a".p   : "pa asat".g)
;

# Must be preceded by initial /w/.
p2g_checked_nucleus_after_initial_w =
  p2g_checked_nucleus_after_w
| ("ʊ".p  : "ta asat".g)
;

# Must not be preceded by /w/.
p2g_checked_nucleus_not_after_w =
  p2g_checked_nucleus
| ("a".p   : "ta asat".g)
| ("ʊ".p   : "-w ta asat".g)
;

p2g_coda_consonant =
( ("k".p   : "ka".g)
| ("kʰ".p  : "kha".g)
| ("g".p   : "ga".g)
| ("s".p   : "ca".g)
| ("sʰ".p  : "cha".g)
| ("z".p   : "ja".g)
| ("t".p   : "ta".g)
| ("tʰ".p  : "tha".g)
| ("d".p   : "da".g)
| ("n".p   : "na".g)
| ("p".p   : "pa".g)
| ("pʰ".p  : "pha".g)
| ("b".p   : "ba".g)
| ("m".p   : "ma".g)
| ("j".p   : "ya".g)
| ("ɹ".p   : "ra".g)
| ("ʃ".p   : "ra -h".g)
| ("l".p   : "la".g)
| ("w".p   : "wa".g)
| ("θ".p   : "sa".g)
| ("ð".p   : "sa -h".g)  # is there a diacritic to mark this?
| ("h".p   : "ha".g)
) ("".p : "asat".g)
|
( ("tɕ".p  : "ka".g)
| ("tɕʰ".p : "kha".g)
| ("dʑ".p  : "ga".g)
) ("".p : "asat -y".g)
;

p2g_coda = ("".p  : "(".g) p2g_coda_consonant+ ("".p : ")".g);

p2g_without_medial_w =
p2g_initial ("j".p : "-y".g)?
( p2g_reduced_nucleus
| p2g_full_nucleus_not_after_w                   p2g_coda?
| p2g_checked_nucleus_not_after_w ("ʔ".p : "".g) p2g_coda?
| p2g_checked_nucleus_not_after_w                p2g_coda
);

p2g_with_medial_w =
p2g_initial ("j".p : "-y".g)? ("w".p : "-w".g)
( p2g_reduced_nucleus
| p2g_full_nucleus_after_w                   p2g_coda?
| p2g_checked_nucleus_after_w ("ʔ".p : "".g) p2g_coda?
| p2g_checked_nucleus_after_w                p2g_coda
);

p2g_initial_w =
("w".p : "wa".g)
( p2g_reduced_nucleus
| p2g_full_nucleus_after_initial_w                   p2g_coda?
| p2g_checked_nucleus_after_initial_w ("ʔ".p : "".g) p2g_coda?
| p2g_checked_nucleus_after_initial_w                p2g_coda
);

p2g_syllable = p2g_without_medial_w | p2g_with_medial_w | p2g_initial_w;

p2g_core = p2g_syllable (Invert[syllable_boundary] p2g_syllable)*;

#
# Orthographic (grapheme-to-grapheme) postprocessing rules
#

before_tall_aa = "kha".g | "ga".g | "nga".g | "da".g | "pa".g | "wa".g;

make_aa_tall = CDRewrite["-aa".g : "-AA".g, before_tall_aa, "".g, gstar];

h_after_y = CDRewrite["-h -y".g : "-y -h".g, "".g, "".g, gstar];

h_after_w = CDRewrite["-h -w".g : "-w -h".g, "".g, "".g, gstar];

orthographic_postprocessing = Optimize[
  make_aa_tall
@ h_after_y
@ h_after_w
];

export P2G = Optimize[
  p2g_core?
@ orthographic_postprocessing
];

export RESPELL = Optimize[G2P @ P2G];
