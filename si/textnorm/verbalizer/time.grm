# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Sinhala Verbalizer for times. Takes ascii protocol buffers for a
# time and convert it to regular Sinhala words.
# example input: "time: {hours: 16 minutes: 20  style: 1}"
# example output: "පස්වරු හතරයි විස්ස"

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;
import 'cardinal.grm' as c;
import 'lseq.grm' as l;

cardinal = c.CARDINAL;

### Hours definitions.
morning_hours = (("0" : "12") | "1" | "2" | "3" | "4" | "5" | "6" |
                 "7" | "8" | "9" | "10" | "11");

hours_24_to_12 =
    ("12")
  | ("13" : "1")
  | ("14" : "2")
  | ("15" : "3")
  | ("16" : "4")
  | ("17" : "5")
  | ("18" : "6")
  | ("19" : "7")
  | ("20" : "8")
  | ("21" : "9")
  | ("22" : "10")
  | ("23" : "11")
  | ("24" : "12")
;

verbalize_am_hours =
  universal_rules.hours
  ("" : "පෙරවරු ")
  (morning_hours @ cardinal)
  universal_rules.rec_sep;

verbalize_pm_hours =
  universal_rules.hours
  ("" : "පස්වරු ")
  (hours_24_to_12 @ cardinal)
  universal_rules.rec_sep;

# Sinhala equivalent of "and" is used between hour and minutes.
verbalize_minutes =
  universal_rules.minutes
  (("" : "යි ") (universal_rules.non_zero_number @ cardinal) | ("0" : ""))
  universal_rules.rec_sep
;

# Sinhala equivalent of "and" with Sinhala word for seconds is used between
# minutes and seconds.
verbalize_seconds =
  universal_rules.seconds
  (("" : "යි තත්පර ") (universal_rules.non_zero_number @ cardinal) | ("0" : ""))
  universal_rules.rec_sep
;

sinhala_time = Optimize[
  (verbalize_am_hours | verbalize_pm_hours)
  verbalize_minutes?
  verbalize_seconds?
];

zone_offset =
    universal_rules.ins_space
    (("+" : "ධන") | ("-" : "ඍණ"))
    universal_rules.ins_space
    ("0" : "")? cardinal
;

zone =
    universal_rules.zone
    (universal_rules.ins_space l.MAPPINGS)*
    zone_offset?
    universal_rules.rec_sep;

export TIME_MARKUP = Optimize[
  universal_rules.semclass_time
  sinhala_time
  zone?
];
