# -*- protobuffer -*- festus.AlignablesSpec
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Copyright 2016 Google, Inc.
# Author: mjansche@google.com (Martin Jansche)

# Grapheme-phoneme correspondence for Sinhala.

input_label_type: SYMBOL
output_label_type: SYMBOL

input_symbol { key: "anusvara"     value: 0x0D82 }
input_symbol { key: "visarga"      value: 0x0D83 }
input_symbol { key: "a"            value: 0x0D85 }
input_symbol { key: "aa"           value: 0x0D86 }
input_symbol { key: "ae"           value: 0x0D87 }
input_symbol { key: "aae"          value: 0x0D88 }
input_symbol { key: "i"            value: 0x0D89 }
input_symbol { key: "ii"           value: 0x0D8A }
input_symbol { key: "u"            value: 0x0D8B }
input_symbol { key: "uu"           value: 0x0D8C }
input_symbol { key: "ri"           value: 0x0D8D }
input_symbol { key: "e"            value: 0x0D91 }
input_symbol { key: "ee"           value: 0x0D92 }
input_symbol { key: "ai"           value: 0x0D93 }
input_symbol { key: "o"            value: 0x0D94 }
input_symbol { key: "oo"           value: 0x0D95 }
input_symbol { key: "au"           value: 0x0D96 }
input_symbol { key: "ka"           value: 0x0D9A }
input_symbol { key: "kha"          value: 0x0D9B }
input_symbol { key: "ga"           value: 0x0D9C }
input_symbol { key: "gha"          value: 0x0D9D }
input_symbol { key: "nga"          value: 0x0D9E }
input_symbol { key: "nnga"         value: 0x0D9F }
input_symbol { key: "ca"           value: 0x0DA0 }
input_symbol { key: "cha"          value: 0x0DA1 }
input_symbol { key: "ja"           value: 0x0DA2 }
input_symbol { key: "jha"          value: 0x0DA3 }
input_symbol { key: "nya"          value: 0x0DA4 }
input_symbol { key: "jnya"         value: 0x0DA5 }
input_symbol { key: "tta"          value: 0x0DA7 }
input_symbol { key: "ttha"         value: 0x0DA8 }
input_symbol { key: "dda"          value: 0x0DA9 }
input_symbol { key: "ddha"         value: 0x0DAA }
input_symbol { key: "nna"          value: 0x0DAB }
input_symbol { key: "nndda"        value: 0x0DAC }
input_symbol { key: "ta"           value: 0x0DAD }
input_symbol { key: "tha"          value: 0x0DAE }
input_symbol { key: "da"           value: 0x0DAF }
input_symbol { key: "dha"          value: 0x0DB0 }
input_symbol { key: "na"           value: 0x0DB1 }
input_symbol { key: "nda"          value: 0x0DB3 }
input_symbol { key: "pa"           value: 0x0DB4 }
input_symbol { key: "pha"          value: 0x0DB5 }
input_symbol { key: "ba"           value: 0x0DB6 }
input_symbol { key: "bha"          value: 0x0DB7 }
input_symbol { key: "ma"           value: 0x0DB8 }
input_symbol { key: "mba"          value: 0x0DB9 }
input_symbol { key: "ya"           value: 0x0DBA }
input_symbol { key: "ra"           value: 0x0DBB }
input_symbol { key: "la"           value: 0x0DBD }
input_symbol { key: "va"           value: 0x0DC0 }
input_symbol { key: "sha"          value: 0x0DC1 }
input_symbol { key: "ssa"          value: 0x0DC2 }
input_symbol { key: "sa"           value: 0x0DC3 }
input_symbol { key: "ha"           value: 0x0DC4 }
input_symbol { key: "lla"          value: 0x0DC5 }
input_symbol { key: "fa"           value: 0x0DC6 }
input_symbol { key: "virama"       value: 0x0DCA }
input_symbol { key: "-aa"          value: 0x0DCF }
input_symbol { key: "-ae"          value: 0x0DD0 }
input_symbol { key: "-aae"         value: 0x0DD1 }
input_symbol { key: "-i"           value: 0x0DD2 }
input_symbol { key: "-ii"          value: 0x0DD3 }
input_symbol { key: "-u"           value: 0x0DD4 }
input_symbol { key: "-uu"          value: 0x0DD6 }
input_symbol { key: "-ri"          value: 0x0DD8 }
input_symbol { key: "-e"           value: 0x0DD9 }
input_symbol { key: "-ee"          value: 0x0DDA }
input_symbol { key: "-ai"          value: 0x0DDB }
input_symbol { key: "-o"           value: 0x0DDC }
input_symbol { key: "-oo"          value: 0x0DDD }
input_symbol { key: "-au"          value: 0x0DDE }
input_symbol { key: "-rri"         value: 0x0DF2 }
input_symbol { key: "ZWNJ"         value: 0x200C }
input_symbol { key: "ZWJ"          value: 0x200D }
input_symbol { key: "-a"           value: 0xE000 }
input_symbol { key: "yansaya"      value: 0xE001 }
input_symbol { key: "rakaransaya"  value: 0xE002 }
input_symbol { key: "repaya"       value: 0xE003 }

output_symbol { key: "ə"   value: 1 }
output_symbol { key: "əː"  value: 2 }
output_symbol { key: "a"   value: 3 }
output_symbol { key: "aː"  value: 4 }
output_symbol { key: "æ"   value: 5 }
output_symbol { key: "æː"  value: 6 }
output_symbol { key: "i"   value: 7 }
output_symbol { key: "iː"  value: 8 }
output_symbol { key: "u"   value: 9 }
output_symbol { key: "uː"  value: 10 }
output_symbol { key: "e"   value: 11 }
output_symbol { key: "eː"  value: 12 }
output_symbol { key: "o"   value: 13 }
output_symbol { key: "oː"  value: 14 }
output_symbol { key: "k"   value: 15 }
output_symbol { key: "g"   value: 16 }
output_symbol { key: "ŋ"   value: 17 }
output_symbol { key: "ᵑg"  value: 18 }
output_symbol { key: "c"   value: 19 }
output_symbol { key: "ɟ"   value: 20 }
output_symbol { key: "ɲ"   value: 21 }
output_symbol { key: "ʈ"   value: 22 }
output_symbol { key: "ɖ"   value: 23 }
output_symbol { key: "ⁿɖ"  value: 24 }
output_symbol { key: "t"   value: 25 }
output_symbol { key: "d"   value: 26 }
output_symbol { key: "n"   value: 27 }
output_symbol { key: "ⁿd"  value: 28 }
output_symbol { key: "p"   value: 29 }
output_symbol { key: "b"   value: 30 }
output_symbol { key: "m"   value: 31 }
output_symbol { key: "ᵐb"  value: 32 }
output_symbol { key: "y"   value: 33 }
output_symbol { key: "r"   value: 34 }
output_symbol { key: "l"   value: 35 }
output_symbol { key: "w"   value: 36 }
output_symbol { key: "ʃ"   value: 37 }
output_symbol { key: "s"   value: 38 }
output_symbol { key: "h"   value: 39 }
output_symbol { key: "f"   value: 40 }


alignable { input: "anusvara"       output: "ŋ" }
alignable { input: "anusvara"       output: "ɲ" }  # place assimiliation
alignable { input: "anusvara"       output: "n" }  # place assimiliation
alignable { input: "visarga"        output: "h" }

# Independent vowel letters

alignable { input: "a"              output: "a" }
alignable { input: "a"              output: "əː" }
alignable { input: "aa"             output: "aː" }
alignable { input: "ae"             output: "æ" }
alignable { input: "aae"            output: "æː" }
alignable { input: "i"              output: "i" }
alignable { input: "ii"             output: "iː" }
alignable { input: "u"              output: "u" }
alignable { input: "uu"             output: "uː" }
alignable { input: "ri"             output: "r i" }
alignable { input: "ri"             output: "i r" }
alignable { input: "e"              output: "e" }
alignable { input: "ee"             output: "eː" }
alignable { input: "ai"             output: "a y" }
alignable { input: "o"              output: "o" }
alignable { input: "o"              output: "oː" }  # in loanwords
alignable { input: "oo"             output: "oː" }
alignable { input: "au"             output: "a w" }
alignable { input: "au"             output: "o w" }

# Simple consonants

alignable { input: "ka"             output: "k" }
alignable { input: "ka virama ssa"  output: "ʃ" }  # word-initially
alignable { input: "kha"            output: "k" }
alignable { input: "ga"             output: "g" }
alignable { input: "gha"            output: "g" }
alignable { input: "nnga"           output: "ᵑg" }
alignable { input: "ca"             output: "c" }
alignable { input: "cha"            output: "c" }
alignable { input: "ja"             output: "ɟ" }
alignable { input: "jha"            output: "ɟ" }
alignable { input: "nya"            output: "ɲ" }
alignable { input: "jnya"           output: "k ɲ" }
alignable { input: "jnya"           output: "ɲ" }  # word-initially
alignable { input: "tta"            output: "ʈ" }
alignable { input: "ttha"           output: "ʈ" }
alignable { input: "dda"            output: "ɖ" }
alignable { input: "ddha"           output: "ɖ" }
alignable { input: "nna"            output: "n" }
alignable { input: "nndda"          output: "ⁿɖ" }
alignable { input: "ta"             output: "t" }
alignable { input: "tha"            output: "t" }
alignable { input: "da"             output: "d" }
alignable { input: "dha"            output: "d" }
alignable { input: "na"             output: "n" }
alignable { input: "na virama"      output: "ɲ" }  # place assimiliation
alignable { input: "na virama"      output: "ŋ" }  # word-finally
alignable { input: "na virama ga"   output: "ŋ" }  # loans w/ English spelling
alignable { input: "nda"            output: "ⁿd" }
alignable { input: "pa"             output: "p" }
alignable { input: "pha"            output: "p" }
alignable { input: "ba"             output: "b" }
alignable { input: "bha"            output: "b" }
alignable { input: "ma"             output: "m" }
alignable { input: "ma virama"      output: "ŋ" }  # word-finally
alignable { input: "mba"            output: "ᵐb" }
alignable { input: "ya"             output: "y" }
alignable { input: "ra"             output: "r" }
alignable { input: "ra virama"      output: "" }  # in non-rhotic English loans
alignable { input: "la"             output: "l" }
alignable { input: "va"             output: "w" }
alignable { input: "sha"            output: "ʃ" }
alignable { input: "ssa"            output: "ʃ" }
alignable { input: "sa"             output: "s" }
alignable { input: "ha"             output: "h" }
alignable { input: "lla"            output: "l" }
alignable { input: "fa"             output: "f" }

# Conjunct forms

alignable { input: "yansaya"        output: "y" }
alignable { input: "rakaransaya"    output: "r" }
alignable { input: "repaya"         output: "r" }

# Gemination

alignable { input: "ka"             output: "k k" }
alignable { input: "kha"            output: "k k" }
alignable { input: "ga"             output: "g g" }
alignable { input: "ja"             output: "ɟ ɟ" }
alignable { input: "jnya"           output: "ɲ ɲ" }
alignable { input: "tta"            output: "ʈ ʈ" }
alignable { input: "nna"            output: "n n" }
alignable { input: "ta"             output: "t t" }
alignable { input: "tha"            output: "t t" }
alignable { input: "da"             output: "d d" }
alignable { input: "dha"            output: "d d" }
alignable { input: "na"             output: "n n" }
alignable { input: "pa"             output: "p p" }
alignable { input: "bha"            output: "b b" }
alignable { input: "ma"             output: "m m" }
alignable { input: "la"             output: "l l" }
alignable { input: "va"             output: "w w" }
alignable { input: "sha"            output: "ʃ ʃ" }
alignable { input: "ssa"            output: "ʃ ʃ" }
alignable { input: "sa"             output: "s s" }

# Degemination

alignable { input: "ta virama ta"   output: "t" }
alignable { input: "da virama dha"  output: "d" }

# Dependent vowel signs

alignable { input: "virama"         output: "" }

alignable { input: "-a"             output: "ə" }
alignable { input: "-a"             output: "a" }
alignable { input: "-a"             output: "əː" }

alignable { input: "-aa"            output: "aː" }
alignable { input: "-aa"            output: "a" }  # word-finally
alignable { input: "-aa"            output: "əː" }
alignable { input: "-ae"            output: "æ" }
alignable { input: "-ae"            output: "ə" }  # TODO: check this
alignable { input: "-aae"           output: "æː" }
alignable { input: "-aae"           output: "æ" }  # word-finally
alignable { input: "-i"             output: "i" }
alignable { input: "-i"             output: "iː" }  # in loanwords
alignable { input: "-ii"            output: "iː" }
alignable { input: "-ii"            output: "i" }  # word-finally
alignable { input: "-u"             output: "u" }
alignable { input: "-u"             output: "uː" }
alignable { input: "-uu"            output: "uː" }
alignable { input: "-uu"            output: "u" }  # word-finally
alignable { input: "-ri"            output: "r u" }
alignable { input: "-ri"            output: "r uː" }
alignable { input: "-ri"            output: "u r" }
alignable { input: "-ri"            output: "r ə" }
alignable { input: "-ri"            output: "ə r" }
alignable { input: "-e"             output: "e" }
alignable { input: "-ee"            output: "eː" }
alignable { input: "-ee"            output: "e" }  # word-finally
alignable { input: "-ai"            output: "a y" }
alignable { input: "-o"             output: "o" }
alignable { input: "-o"             output: "oː" }  # in loanwords
alignable { input: "-oo"            output: "oː" }
alignable { input: "-oo"            output: "o" }  # word-finally
alignable { input: "-au"            output: "a w" }
alignable { input: "-au"            output: "o w" }
alignable { input: "-rri"           output: "r uː" }
alignable { input: "-rri"           output: "r u" }  # word-finally

# YA

alignable { input: "ya"             output: "" }      # no on-glide before /i/

alignable { input: "ya -i"          output: "y" }     # off-glide in diphthong

alignable { input: "-i ya -i"       output: "iː" }    # fusion

alignable { input: "ya -a ya"       output: "y" }     # haplology
alignable { input: "yansaya -a ya"  output: "y" }     # haplology

# VA

alignable { input: "va"             output: "" }      # no on-glide before /u/

alignable { input: "va -u"          output: "w" }     # off-glide in diphthong

alignable { input: "va -ri"         output: "w u" }   # simplification
alignable { input: "va virama"      output: "u"}      # transcription problem?

# Typos

alignable { input: "o"              output: "ᵐb ə" }  # ඔ o -> ඹ mba
alignable { input: "nga"            output: "ɖ" }     # ඞ nga -> ඩ dda
alignable { input: "nnga"           output: "g" }     # ඟ nnga -> ග ga
alignable { input: "da"             output: "ⁿd" }    # ද da -> ඳ nda
alignable { input: "nda"            output: "d" }     # ඳ nda -> ද da
alignable { input: "ra -ae"         output: "r u" }   # රැ rae -> රු ru
alignable { input: "ra -u"          output: "r æ" }   # රැ rae <- රු ru
alignable { input: "ra -aae"        output: "r uː" }  # රෑ raae -> රූ ruu
alignable { input: "va virama"      output: "w i" }   # ව් v -> වි vi
alignable { input: "sa -ri"         output: "r i" }   # සෘ sri -> ඍ ri
alignable { input: "sa -ri"         output: "i r" }   # සෘ sri -> ඍ ri

# Exceptions, foreign words, etc.

alignable { input: "dda virama tta" output: "ʈ" }     # වෙන්ඩ්ට්
alignable { input: "ta virama da"   output: "d d" }   # අත්දැකීමක්
alignable { input: "-i ya -u"       output: "y u" }   # දියුණුවට
alignable { input: "-i va -u"       output: "y u" }   # නිවුස්
