# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Khmer address parser.

import 'khmer.grm' as km;
import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

street =
    ("St." : "ផ្លូវ លេខ")
  | ("វិថី")
  | ("វិថី លេខ")
  | ("ផ្លូវ")
  | ("ផ្លូវ លេខ")
;

# Handles reference to street (វិថី/ផ្លូវ) by their numbers.
# It is frequently in the form of "street (វិថី/ផ្លូវ) + no. (លេខ) + number".
# And sometimes it is written w/o no. (លេខ) as "street (វិថី/ផ្លូវ)+ number".
# For example, "វិថី 340", "វិថី លេខ 450", or "ផ្លូវ 320".
#
# In case of "St. + number", it would then be read as "ផ្លូវ លេខ + number".
export ROAD_NUMBER = Optimize[
  universal_func.InvertMarkup[universal_rules.address] universal_rules.ins_space
  universal_rules.clear_space_star
  universal_func.InvertMarkup[universal_rules.opening_brace] universal_rules.ins_space
  universal_func.InvertMarkup[universal_rules.address_thoroughfare] universal_rules.ins_space
  universal_func.InvertMarkup[universal_rules.opening_brace] universal_rules.ins_space
  universal_func.InvertMarkup[universal_rules.address_premises] universal_rules.ins_space
  universal_func.InvertMarkup[universal_rules.quote]
  street
  universal_rules.clear_space_star
  universal_func.InvertMarkup[universal_rules.quote] universal_rules.ins_space
  universal_func.InvertMarkup[universal_rules.address_thoroughfare_dependent_name] universal_rules.ins_space
  universal_func.InvertMarkup[universal_rules.quote]
  (km.KHMER_DIGIT+ | universal_rules.kDigit+)
  universal_func.InvertMarkup[universal_rules.quote] universal_rules.ins_space
  universal_func.InvertMarkup[universal_rules.closing_brace] universal_rules.ins_space
  universal_func.InvertMarkup[universal_rules.closing_brace]
];

export ADDRESS_MARKUP = Optimize[ROAD_NUMBER @ universal_rules.CLEAN_SPACES];
