# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Parser for measurements.
# Basically, combine universal measure markup with
# support for Khmer units.

import 'khmer.grm' as km;
import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

khmer_units = StringFile[
    'measure_units_km.txt'];
khmer_abbv_units = StringFile[
    'measure_units_abbv.txt'];
khmer_prefixes = StringFile[
    'measure_prefixes_km.txt'];

number = universal_rules.INTEGER_DECIMAL_DOT_MAX_MARKUP | universal_rules.FRACTION_MARKUP;

# Rule to handle letter sequence & "."
# Cases:
# 1) គក (pure sequence of letters)
# 2) គ.ក្រ., គ.ក., គ.ក (each seq is up to 3 letters)
remove_dot_and_space =
  (km.KHMER_LETTER{1,3} ((universal_rules.clear_space? "."? universal_rules.clear_space?) : ""))+;

all_abbv_units = universal_rules.SI_UNITS | universal_rules.ENGLISH_UNITS | universal_rules.MISC_UNITS | universal_rules.POWER_UNITS
  | remove_dot_and_space @ khmer_abbv_units;

all_units = all_abbv_units | Project[all_abbv_units, 'output']
  | ((khmer_prefixes " "?)? khmer_units);

# Cambodians usually say "ក្នុងមួយ", which means "in one", instead of "per".
slash = " "? "/" " "?;
pers = ("ក្នុងមួយ" | slash | "per" | " per ") : "ក្នុង មួយ";

over_measure = universal_func.UnitsPerUnitsMarkup[number, all_units, pers, all_units];

export MEASURE_MARKUP = Optimize[
  (
    universal_func.MeasureMarkup[number, all_units]
  | universal_rules.TWENTYFOUR_H
  | universal_rules.UNITS_DMS
  | universal_rules.UNITS_HMS
  | universal_rules.UNITS_FEET_INCHES
  | universal_func.UnitsInches[number]
  | over_measure
  ) @ universal_rules.CLEAN_SPACES
];
