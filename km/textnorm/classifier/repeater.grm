# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Khmer-specific repeater symbol (ៗ) handler.
# Acceptable format:
# <space><khmer_word><space>?<repeater>
# where <khmer_word> is any sequence of Khmer letters (2 or more)
# that does not contain the repeater symbol itself.
# E.g., ល្អៗ.

import 'khmer.grm' as km;
import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

export KHMER_REPEATABLE_WORD =
   km.KHMER_LETTER_EXCEPT_REPEATER km.KHMER_LETTER_EXCEPT_REPEATER+;

# This rule recognizes any Khmer word followed by the repeater symbol.
# Output format:
#   name: "<word><repeater>" type: WORD_NEEDS_VERBALIZATION
export REPEATER_MARKUP = Optimize[
   (
      universal_func.InvertMarkup[universal_rules.token_name]
      universal_rules.ins_space
      universal_rules.ins_quote
      KHMER_REPEATABLE_WORD
      universal_rules.clear_space_star
      km.REPEATER
      universal_rules.ins_quote
      universal_rules.ins_space
      universal_func.InvertMarkup[universal_rules.token_type_need_verbalization]
   ) @ universal_rules.CLEAN_SPACES
];
